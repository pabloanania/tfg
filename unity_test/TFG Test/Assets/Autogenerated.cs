
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;

public class Autogenerated : MonoBehaviour
{

    private IEnumerable<Entity> allDisparo;
    private IEnumerable<Entity> allMateria;
    private IEnumerable<Entity> allPersonaje;
    private IEnumerable<Entity> allSystem;
    private IEnumerable<Entity> filteredDisparo;
    private IEnumerable<Entity> filteredMateria;
    private IEnumerable<Entity> filteredPersonaje;
    private IEnumerable<Entity> filteredSystem;

    void Start()
    {

    }

    void Update()
    {
        /* EVENT START */
        NewEvent();
        if (true)
        {
            foreach (Disparo_Entity Disparo in filteredDisparo) { Disparo.Y = Disparo.Y - 10; }
            foreach (Materia_Entity Materia in filteredMateria) { Materia.Y = Materia.Y + 2; }
        }
        /* EVENT START */
        NewEvent();
        InvokeRepeating("InvokeCallback0", 1f, 1f);
        /* EVENT START */
        NewEvent();
        if (Input.GetKey("right"))
        {
            filteredPersonaje = filteredPersonaje.Where(e => e.X < 7);
            foreach (Personaje_Entity Personaje in filteredPersonaje) { Personaje.X = Personaje.X + 5; }
        }
        /* EVENT START */
        NewEvent();
        if (Input.GetKey("left"))
        {
            filteredPersonaje = filteredPersonaje.Where(e => e.X > -7);
            foreach (Personaje_Entity Personaje in filteredPersonaje) { Personaje.X = Personaje.X - 5; }
        }
        /* EVENT START */
        NewEvent();
        if (Input.GetKeyDown("16"))
        {
            foreach (System_Entity System in filteredSystem) { Instantiate(Disparo, new Vector3(Personaje.X, Personaje.Y, Personaje.Z), Quaternion.Identity); }
        }
        /* EVENT START */
        NewEvent();
        filteredDisparo = filteredDisparo.Where(e => e.CollidesWith("Materia_Entity"));
        foreach (Disparo_Entity Disparo in filteredDisparo) { Destroy(Disparo.gameObject); }
        foreach (Materia_Entity Materia in filteredMateria) { Materia.Calificacion = Materia.Calificacion + 1; }
        /* EVENT START */
        NewEvent();
        filteredMateria = filteredMateria.Where(e => e.Calificacion < 4);
        filteredMateria = filteredMateria.Where(e => e.Y > 600);
        foreach (TextoFeedback_Entity TextoFeedback in filteredTextoFeedback) { TextoFeedback.text = "REPROBADO!!"; }
        foreach (Materia_Entity Materia in filteredMateria) { Destroy(Materia.gameObject); }
        foreach (TextoFeedback_Entity TextoFeedback in filteredTextoFeedback) { TextoFeedback.TiempoMostrarse = 3; }
        /* EVENT START */
        NewEvent();
        filteredPersonaje = filteredPersonaje.Where(e => e.CollidesWith("Materia_Entity"));
        foreach (TextoFeedback_Entity TextoFeedback in filteredTextoFeedback) { TextoFeedback.text = "REPROBADO!!"; }
        foreach (Materia_Entity Materia in filteredMateria) { Destroy(Materia.gameObject); }
        foreach (TextoFeedback_Entity TextoFeedback in filteredTextoFeedback) { TextoFeedback.TiempoMostrarse = 3; }
        /* EVENT START */
        NewEvent();
        filteredMateria = filteredMateria.Where(e => e.Calificacion >= 4);
        filteredMateria = filteredMateria.Where(e => e.Y > 600);
        foreach (TextoFeedback_Entity TextoFeedback in filteredTextoFeedback) { TextoFeedback.text = "APROBADO CON " + Materia.Calificacion + "!"; }
        foreach (Materia_Entity Materia in filteredMateria) { Destroy(Materia.gameObject); }
        foreach (TextoFeedback_Entity TextoFeedback in filteredTextoFeedback) { TextoFeedback.TiempoMostrarse = 3; }
        /* EVENT START */
        NewEvent();
        filteredTextoFeedback = filteredTextoFeedback.Where(e => e.TiempoMostrarse <= 0);
        foreach (TextoFeedback_Entity TextoFeedback in filteredTextoFeedback) { TextoFeedback.text = ""; }
        /* EVENT START */
        NewEvent();
        filteredMateria = filteredMateria.Where(e => e.Calificacion > 10);
        foreach (Materia_Entity Materia in filteredMateria) { Materia.Calificacion = 10; }
        /* EVENT START */
        NewEvent();
        filteredGameMaster = filteredGameMaster.Where(e => e.TiempoCreacionMateria >= 10);
        foreach (GameMaster_Entity GameMaster in filteredGameMaster) { GameMaster.TiempoCreacionMateria = 0; }
        foreach (System_Entity System in filteredSystem) { Instantiate(Materia, new Vector3(0, Random(800), 0), Quaternion.Identity); }

    }

    void FixedUpdate()
    {

    }

    /* EVENT INITIALIZATION */
    private void NewEvent()
    {
        allPersonaje = FindObjectsOfType<Personaje_Entity>().ToList<Entity>();
        allMateria = FindObjectsOfType<Materia_Entity>().ToList<Entity>();
        allDisparo = FindObjectsOfType<Disparo_Entity>().ToList<Entity>();
        allSystem = FindObjectsOfType<System_Entity>().ToList<Entity>();
        filteredPersonaje = allPersonaje;
        filteredDisparo = allDisparo;
        filteredMateria = allMateria;
        filteredSystem = allSystem;
    }

    /* INVOKE CALLBACKS */
    void InvokeCallback0()
    {
        foreach (TextoFeedback_Entity TextoFeedback in filteredTextoFeedback) { TextoFeedback.TiempoMostrarse = TextoFeedback.TiempoMostrarse - 1; }
        foreach (GameMaster_Entity GameMaster in filteredGameMaster) { GameMaster.TiempoCreacionMateria = GameMaster.TiempoCreacionMateria + random(11); }
    }

}
